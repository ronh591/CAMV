language: node_js
sudo: false
# cache:
#   directories:
#     - node_modules

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.8
    packages:
      - clang-3.8

matrix:
  include:
    - os: linux
      node_js: '12'
      compiler: clang
      env:
      addons:
         apt:
            sources: [ 'ubuntu-toolchain-r-test','llvm-toolchain-precise-3.8', 'gcc-multilib', 'g++-multilib', 'libsqlite3-dev' ]
            packages: [ 'clang-3.8', 'libstdc++-4.9-dev' ]
    - os: osx
      node_js: '12'

before_install:
  - export CAMV_VERSION=$(node -e "console.log(require('./package.json').version);")
  - export DEBUG=electron-packager
  - uname -s
  - echo '${CXX} ${CC}'
  - if [[ $(uname -s) == 'Linux' ]]; then
      export CXX="clang++-3.8";
      export CC="clang-3.8";
      export DEPLOY_FILE=out/make/CAMV-linux-x64-${CAMV_VERSION}.zip;
    elif [[ $(uname -s) == 'Darwin' ]] ; then
      export DEPLOY_FILE=out/make/CAMV-darwin-x64-${CAMV_VERSION}.zip;
    fi;
  - "npm i -g electron-forge"
  - "npm i -g node-pre-gyp"
  - "npm --version"

install:
  - travis_wait 30 npm install

script:
  - travis_wait 30 electron-forge make
  - ls -lh out/make/

deploy:
  provider: releases
  api_key:
    secure: xm0TYxDY3BQU1eZKyTiSMJK8YmYJd94LYXZOOo+90/X2dQO5KYGQ1O6x6uWnU/LCCzigCVHB2pEESUhUhNeiZyeBL1fo0xBk6oc7BHDGbM3fGtKWlfXDQRqd/yzJK4uxKEEseHASi3XO1xG2A+NS3BkxFA/k0whsloZFuD7KmLF0cDW2e0S4YHNw8HhEOA5K6HTArijpk7hjAtaSyvOuvTgXUIEEYxK1L5XWnwKLnQ2SJthTIMwAuF01PRFoRaiZRGIKhLQXFxnlmvaxxwjz3iBs3NQ5QMNXuapTxQcfUN+yljbGjABC8IzatCCQjAGWUmEUtKf5eJG0DRiSRgMTB7R6+EQ84GcjnrgehaBroALi6z3J7t1Wg7nT58NZ58pc6fWPRDYnKTvE79LQVQsuBGp8b/bp/26IR9gM4xhek6Vn3MqdK6x3xObkM3EpHCGQr4ljadeEnvu5eJ3harkU7fbNmUqYMUytcaW+UeirpICP4xF/heenv/h8eSQWevswSjmnqT9SUrgEkVGWbtbtwOJRCgvMD/m9HW97/UBXMC7sr+hIeOzxCdHEaUTmXAcNR+LMNbHWLh1hMjwmCqkJzJ93LtJ5pA7+QiGU+iWsIw6VF1z5m51OqhjHWFqlqWcJzgH1/Gwsn4e0FtnuZHtWv4AmbKlAPc54NK4eEAXcP9s=
  file:
    - $DEPLOY_FILE
  skip_cleanup: true
  on:
    repo: white-lab/CAMV
    tags: true
